/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package git.basebit.me/enigma/xfs2-client-go/fsapi */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 4 "fsapi.go"
 #include "xfs2_fsapi_internal.h"

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


extern xfs2_fs_config_t xfs2_new_fs_config(char* p0, char* p1, short unsigned int p2, short unsigned int p3, char* p4, char* p5);

extern void xfs2_destroy_fs_config(xfs2_fs_config_t p0);

extern void xfs2_fs_config_set_dial_timeout(xfs2_fs_config_t p0, unsigned int p1);

extern void xfs2_fs_config_set_write_timeout(xfs2_fs_config_t p0, unsigned int p1);

extern void xfs2_fs_config_set_read_timeout(xfs2_fs_config_t p0, unsigned int p1);

extern void xfs2_fs_config_set_max_retry_on_rpc_timeout(xfs2_fs_config_t p0, unsigned int p1);

extern xfs2_fs_t xfs2_openfs(xfs2_fs_config_t p0);

extern int xfs2_closefs(xfs2_fs_t p0);

extern int xfs2_mkfifo(xfs2_fs_t p0, char* p1);

extern int xfs2_mkfifo_stat(xfs2_fs_t p0, char* p1, struct xfs2_stat* p2);

extern int xfs2_mkdir(xfs2_fs_t p0, char* p1);

extern int xfs2_mkdir_stat(xfs2_fs_t p0, char* p1, struct xfs2_stat* p2);

extern int xfs2_mkdir_all(xfs2_fs_t p0, char* p1);

extern int xfs2_mkdir_all_stat(xfs2_fs_t p0, char* p1, struct xfs2_stat* p2);

extern int xfs2_remove(xfs2_fs_t p0, char* p1);

extern int xfs2_remove_all(xfs2_fs_t p0, char* p1);

extern int xfs2_rename(xfs2_fs_t p0, char* p1, char* p2);

extern int xfs2_stat(xfs2_fs_t p0, char* p1, struct xfs2_stat* p2);

extern int xfs2_lstat(xfs2_fs_t p0, char* p1, struct xfs2_stat* p2);

extern int xfs2_truncate(xfs2_fs_t p0, char* p1, off_t p2);

extern int xfs2_symlink(xfs2_fs_t p0, char* p1, char* p2);

extern int xfs2_symlink_stat(xfs2_fs_t p0, char* p1, char* p2, struct xfs2_stat* p3);

extern ssize_t xfs2_readlink(xfs2_fs_t p0, char* p1, char* p2, size_t p3);

extern int xfs2_link(xfs2_fs_t p0, char* p1, char* p2);

extern int xfs2_setxattr(xfs2_fs_t p0, char* p1, char* p2, void* p3, size_t p4);

extern ssize_t xfs2_getxattr(xfs2_fs_t p0, char* p1, char* p2, void* p3, size_t p4);

extern ssize_t xfs2_listxattr(xfs2_fs_t p0, char* p1, char* p2, size_t p3);

extern xfs2_dir_t xfs2_opendir(xfs2_fs_t p0, char* p1);

extern xfs2_dir_t xfs2_opendir_stat(xfs2_fs_t p0, char* p1, struct xfs2_stat* p2);

extern GoInt xfs2_closedir(xfs2_dir_t p0);

extern void xfs2_seekdir(xfs2_dir_t p0, off_t p1);

extern off_t xfs2_telldir(xfs2_dir_t p0);

extern ssize_t xfs2_readdir(xfs2_dir_t p0, struct xfs2_dirent* p1, size_t p2);

extern ssize_t xfs2_readdir_plus(xfs2_dir_t p0, struct xfs2_stat* p1, size_t p2, off_t* p3);

extern xfs2_file_t xfs2_openfile(xfs2_fs_t p0, char* p1, int p2);

extern xfs2_file_t xfs2_openfile_stat(xfs2_fs_t p0, char* p1, int p2, struct xfs2_stat* p3);

extern int xfs2_closefile(xfs2_file_t p0);

extern ssize_t xfs2_writefile(xfs2_file_t p0, void* p1, size_t p2);

extern ssize_t xfs2_pwritefile(xfs2_file_t p0, void* p1, size_t p2, off_t p3);

extern ssize_t xfs2_readfile(xfs2_file_t p0, void* p1, size_t p2);

extern ssize_t xfs2_preadfile(xfs2_file_t p0, void* p1, size_t p2, off_t p3);

extern off_t xfs2_seekfile(xfs2_file_t p0, off_t p1, int p2);

extern int xfs2_syncfile(xfs2_file_t p0);

extern char* xfs2_getcwd(xfs2_fs_t p0, char* p1, size_t p2);

extern int xfs2_chdir(xfs2_fs_t p0, char* p1);

extern int xfs2_utime(xfs2_fs_t p0, char* p1, time_t p2, time_t p3);

extern int xfs2_utimes(xfs2_fs_t p0, char* p1, struct timespec* p2, struct timespec* p3);

extern int xfs2_lutimes(xfs2_fs_t p0, char* p1, struct timespec* p2, struct timespec* p3);

#ifdef __cplusplus
}
#endif
